n := 4;
list := SmallGroups(4*n*n,func<G|not IsAbelian(G) and IsSolvable(G)>);
count := 1;
//list2 is a list of group which contains at least one dihedral subgroup
list2 := [];
//G := list[1];
//s4 := [K`subgroup : K in Subgroups(G : OrderEqual := 8)];


for G in list do
    subgroupsList := [K`subgroup : K in Subgroups(G : OrderEqual := 8)];
    flag := 0;
    for H in subgroupsList do
        if(IsIsomorphic(H,DihedralGroup(n))) then
            flag := 1;
        end if;
    end for;
    if flag eq 1 then
        Append(~list2,G);
        count;
    end if;
    count := count + 1;
end for;

//test with the first group
G := list2[1];
sub_G := [K`subgroup : K in Subgroups(G : OrderEqual := 8)];

//test with the first two subgourp
sub1 := sub_G[1];
sub2 := sub_G[2];
s12 := sub<G|sub1,sub2>;

product := {};
for a in sub1 do
    for b in sub2 do
        Include(~product, a*b);
    end for;
end for;

#product2;
#sub1;
#sub2;
//end test with the first two subgroup


//Given a Group, not sure is exact product of dihedral group, 
//use its dihedral subgroup times together to see whether it is exact product
//and record the subgourp with pair index [i,j].
i := 1;
for sub1 in sub_G do
    j := 1;
    for sub2 in sub_G do
        product := {};
        for a in sub1 do
            for b in sub2 do
                Include(~product, a*b);
            end for;
        end for;
        if #product eq 2*2*n*n then
            [i,j];
        end if;
        j := j+1;
    end for;
    i := i+1;
end for;

//test with the first exact product of dihedral group, [2,9] given by result, Type(H)=GrpPC
H := sub_G[2];
K := sub_G[9];
list3 := [];
for a in H do
    if Order(a) eq #H/2 then
        Append(~list3,a);
        break;
    end if;
end for;
for a in H do
    if Order(a) eq 2 then
        Append(~list3,a);
        break;
    end if;
end for;
H1 := sub<H | list3[1],list3[2]>;
if #H1 eq #H then
    H := H1;
else 
    "error";
end if;

flag := 0;
for a in H do 
    for b in H do 
        if Order(a) eq #H/2 and Order(b) eq 2 then 
            H1 := sub<H | a,b>;
            if #H1 eq #H then 
                [a,b,a^b];
                //W,phi := WordGroup(H1);
                //w := Inverse(phi)(a^b);
                //Eltseq(w);
                
                H := H1;
                flag :=1;
                break a;
            end if;
        end if;
    end for;
end for;

for a in H do 
    a;
    Order(a);
end for;

if flag eq 0 then 
    "error";
end if;




//free group
F<a,b> := FreeGroup(2);
rels := {a^4,b^2,(b*a)^2};
FQ<u,v>, proj := quo<F | rels>;
iso := hom<FQ -> H | [x,y]>;
(x^y) @@ iso;
Eltseq((x^y) @@ iso);

//After ReWrite ,it is more simplify
FQ10 := RWSGroup(FQ);
iso10 :=hom<FQ10 -> H | [x,y]>;
Eltseq((x^y) @@ iso10);


//i,j is the index of dihedral subgroup that is exact product of X.



//list2 is the list of group of order 64 which contains a dihedral subgroup of order 8